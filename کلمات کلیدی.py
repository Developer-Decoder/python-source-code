# .lower()حروف کوچک برمی گرداند
# globalبرای تغییر مقدار یک متغیر سراسری در یک تابع،
# .strip()روش هر فضای خالی را از ابتدا یا انتهای آن حذف می کند
# .replace()روش یک رشته را با رشته دیگری جایگزین می کند
# .upper()را با حروف بزرگ برمی گرداند
# .split()روش اگر نمونه هایی از جداکننده را پیدا کند، رشته را به زیر رشته ها تقسیم می کند
# len()طول یک رشته را برمی گرداند
# .replace()روش یک رشته را با رشته دیگری جایگزین می کند
# .split()روش اگر نمونه هایی از جداکننده را پیدا کند، رشته را به زیر رشته ها تقسیم می کند
# .format()روش برای درج اعداد در رشته ها استفاده کنید
# bool()به شما امکان می دهد هر مقداری را ارزیابی کنید و به شما Trueیا False در ازای آن
# isinstance()بررسی کنید که آیا یک شی یک عدد صحیح است یا خیر
# list()سازنده برای ایجاد لیست
# .insert()روش یک آیتم را در شاخص مشخص شده درج می کند
# .append()برای افزودن یک آیتم به انتهای لیست
# .extend()برای الحاق عناصر از یک لیست دیگر به لیست فعلی
# .remove()مورد مشخص شده را حذف می کند
# .pop()شاخص مشخص شده را حذف می کند
# delکلیدی همچنین شاخص مشخص شده را حذف می کند
# clear()پاک کردن محتوا
# .sort()به صورت عددی مرتب کنید
# key = functionشما همچنین می توانید تابع خود را با استفاده از آرگومان کلمه کلیدی سفارشی کنید
"مثال"
"""def myfunc(n):
  return abs(n - 50)

thislist = [100, 50, 65, 82, 23]
thislist.sort(key = myfunc)
print(thislist)"""
# .sort(key = str.lower)یک مرتب سازی بدون حساس به حروف بزرگ و کوچک از لیست انجام دهید
# .reverse()روش ترتیب مرتب سازی فعلی عناصر را معکوس می کند
# .copy()یک کپی از یک لیست با 
# .extend()روش اضافه کردن لیست 2 در انتهای لیست 1 استفاده کنید
